@using LawyerTimeTracker.ViewModels
@model List<Issue>

@{
    var issues = Model;
}

@foreach (var issue in issues)
{
    <div id="task_@issue.Id" name="task_link" data-fancybox data-src="#form_@issue.Id" href="javascript:">
        <div class="board-column-issue">
            <div class="board-column-issue-title">@issue.Title</div>
        </div>
    </div>
    <div id="form_@issue.Id" class="issue">
        @{
            NewTaskModel newTask = new NewTaskModel
            {Id = issue.Id, Title = issue.Title, Description = issue.Description, TypeOfTask = issue.TypeOfTask};
        }
        @await Html.PartialAsync("SingleIssue", newTask)
        <div class="board-column-issue-item">Start time: @issue.StartTime</div>
        <div class="board-column-issue-item">End time: @issue.EndTime</div>
        <div>
            @if (issue.StartTime == null)
            {
                <form class="change-time-button" asp-action="StartTask" asp-controller="Task" asp-route-id="@issue.Id" asp-anti-forgery="true" method="post">
                    <input type="submit" value="Start"/>
                </form>
            }
            @if (issue.EndTime == null && issue.StartTime != null)
            {
                <form class="change-time-button" asp-action="EndTask" asp-controller="Task" asp-route-id="@issue.Id" asp-anti-forgery="true" method="post">
                    <input type="submit" value="End"/>
                </form>
            }
        </div>
    </div>
}